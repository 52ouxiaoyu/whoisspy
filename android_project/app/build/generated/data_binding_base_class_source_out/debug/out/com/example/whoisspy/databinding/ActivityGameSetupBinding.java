// Generated by view binder compiler. Do not edit!
package com.example.whoisspy.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.whoisspy.R;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityGameSetupBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button buttonDecreasePlayers;

  @NonNull
  public final Button buttonDecreaseSpies;

  @NonNull
  public final Button buttonDecreaseWhiteboards;

  @NonNull
  public final Button buttonIncreasePlayers;

  @NonNull
  public final Button buttonIncreaseSpies;

  @NonNull
  public final Button buttonIncreaseWhiteboards;

  @NonNull
  public final MaterialButton buttonStartGame;

  @NonNull
  public final LinearLayout linearLayoutPlayerCount;

  @NonNull
  public final LinearLayout linearLayoutSpyCount;

  @NonNull
  public final LinearLayout linearLayoutWhiteboardCount;

  @NonNull
  public final LinearLayout linearLayoutWordCategory;

  @NonNull
  public final Spinner spinnerWordCategory;

  @NonNull
  public final TextView textViewPlayerCount;

  @NonNull
  public final TextView textViewSpyCount;

  @NonNull
  public final TextView textViewWhiteboardCount;

  private ActivityGameSetupBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button buttonDecreasePlayers, @NonNull Button buttonDecreaseSpies,
      @NonNull Button buttonDecreaseWhiteboards, @NonNull Button buttonIncreasePlayers,
      @NonNull Button buttonIncreaseSpies, @NonNull Button buttonIncreaseWhiteboards,
      @NonNull MaterialButton buttonStartGame, @NonNull LinearLayout linearLayoutPlayerCount,
      @NonNull LinearLayout linearLayoutSpyCount, @NonNull LinearLayout linearLayoutWhiteboardCount,
      @NonNull LinearLayout linearLayoutWordCategory, @NonNull Spinner spinnerWordCategory,
      @NonNull TextView textViewPlayerCount, @NonNull TextView textViewSpyCount,
      @NonNull TextView textViewWhiteboardCount) {
    this.rootView = rootView;
    this.buttonDecreasePlayers = buttonDecreasePlayers;
    this.buttonDecreaseSpies = buttonDecreaseSpies;
    this.buttonDecreaseWhiteboards = buttonDecreaseWhiteboards;
    this.buttonIncreasePlayers = buttonIncreasePlayers;
    this.buttonIncreaseSpies = buttonIncreaseSpies;
    this.buttonIncreaseWhiteboards = buttonIncreaseWhiteboards;
    this.buttonStartGame = buttonStartGame;
    this.linearLayoutPlayerCount = linearLayoutPlayerCount;
    this.linearLayoutSpyCount = linearLayoutSpyCount;
    this.linearLayoutWhiteboardCount = linearLayoutWhiteboardCount;
    this.linearLayoutWordCategory = linearLayoutWordCategory;
    this.spinnerWordCategory = spinnerWordCategory;
    this.textViewPlayerCount = textViewPlayerCount;
    this.textViewSpyCount = textViewSpyCount;
    this.textViewWhiteboardCount = textViewWhiteboardCount;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityGameSetupBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityGameSetupBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_game_setup, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityGameSetupBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonDecreasePlayers;
      Button buttonDecreasePlayers = ViewBindings.findChildViewById(rootView, id);
      if (buttonDecreasePlayers == null) {
        break missingId;
      }

      id = R.id.buttonDecreaseSpies;
      Button buttonDecreaseSpies = ViewBindings.findChildViewById(rootView, id);
      if (buttonDecreaseSpies == null) {
        break missingId;
      }

      id = R.id.buttonDecreaseWhiteboards;
      Button buttonDecreaseWhiteboards = ViewBindings.findChildViewById(rootView, id);
      if (buttonDecreaseWhiteboards == null) {
        break missingId;
      }

      id = R.id.buttonIncreasePlayers;
      Button buttonIncreasePlayers = ViewBindings.findChildViewById(rootView, id);
      if (buttonIncreasePlayers == null) {
        break missingId;
      }

      id = R.id.buttonIncreaseSpies;
      Button buttonIncreaseSpies = ViewBindings.findChildViewById(rootView, id);
      if (buttonIncreaseSpies == null) {
        break missingId;
      }

      id = R.id.buttonIncreaseWhiteboards;
      Button buttonIncreaseWhiteboards = ViewBindings.findChildViewById(rootView, id);
      if (buttonIncreaseWhiteboards == null) {
        break missingId;
      }

      id = R.id.buttonStartGame;
      MaterialButton buttonStartGame = ViewBindings.findChildViewById(rootView, id);
      if (buttonStartGame == null) {
        break missingId;
      }

      id = R.id.linearLayoutPlayerCount;
      LinearLayout linearLayoutPlayerCount = ViewBindings.findChildViewById(rootView, id);
      if (linearLayoutPlayerCount == null) {
        break missingId;
      }

      id = R.id.linearLayoutSpyCount;
      LinearLayout linearLayoutSpyCount = ViewBindings.findChildViewById(rootView, id);
      if (linearLayoutSpyCount == null) {
        break missingId;
      }

      id = R.id.linearLayoutWhiteboardCount;
      LinearLayout linearLayoutWhiteboardCount = ViewBindings.findChildViewById(rootView, id);
      if (linearLayoutWhiteboardCount == null) {
        break missingId;
      }

      id = R.id.linearLayoutWordCategory;
      LinearLayout linearLayoutWordCategory = ViewBindings.findChildViewById(rootView, id);
      if (linearLayoutWordCategory == null) {
        break missingId;
      }

      id = R.id.spinnerWordCategory;
      Spinner spinnerWordCategory = ViewBindings.findChildViewById(rootView, id);
      if (spinnerWordCategory == null) {
        break missingId;
      }

      id = R.id.textViewPlayerCount;
      TextView textViewPlayerCount = ViewBindings.findChildViewById(rootView, id);
      if (textViewPlayerCount == null) {
        break missingId;
      }

      id = R.id.textViewSpyCount;
      TextView textViewSpyCount = ViewBindings.findChildViewById(rootView, id);
      if (textViewSpyCount == null) {
        break missingId;
      }

      id = R.id.textViewWhiteboardCount;
      TextView textViewWhiteboardCount = ViewBindings.findChildViewById(rootView, id);
      if (textViewWhiteboardCount == null) {
        break missingId;
      }

      return new ActivityGameSetupBinding((ConstraintLayout) rootView, buttonDecreasePlayers,
          buttonDecreaseSpies, buttonDecreaseWhiteboards, buttonIncreasePlayers,
          buttonIncreaseSpies, buttonIncreaseWhiteboards, buttonStartGame, linearLayoutPlayerCount,
          linearLayoutSpyCount, linearLayoutWhiteboardCount, linearLayoutWordCategory,
          spinnerWordCategory, textViewPlayerCount, textViewSpyCount, textViewWhiteboardCount);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
